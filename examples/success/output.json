{
  "description": "FTP output - Caution - for DIRECTORY creates and not only copies directory. Works in a different way that inputs.",
  "outputs": [
    {
      "description": "ftp://ftp-private.ebi.ac.uk/upload/examples/existing1 exists and is initially empty - expect file.txt created and having contents of file1.txt",
      "path": "/tes/file1.txt",
      "type": "FILE",
      "url": "ftp://ftp-private.ebi.ac.uk/upload/examples/existing1/file.txt"
    },
    {
      "description": "ftp://ftp-private.ebi.ac.uk/upload/examples/existing2 exists and contains file.txt - expect file.txt overwriten and having contents of file1.txt",
      "path": "/tes/file1.txt",
      "type": "FILE",
      "url": "ftp://ftp-private.ebi.ac.uk/upload/examples/existing2/file.txt"
    },
    {
      "description": "ftp://ftp-private.ebi.ac.uk/upload/examples/tes does not exist - expect tes directory will be created and will contain file1.txt and file2.txt. Different behaviour than by inputs!!! It is not directory contents that is copied (inputs for directories work as merge), but a new directory is created with the source name (no name change possible).",
      "path": "/tes",
      "type": "DIRECTORY",
      "url": "ftp://ftp-private.ebi.ac.uk/upload/examples"
    }
  ],
  "executors": [
    {
      "image": "docker-registry.ebrains.eu/tc/python:3.8-alpine",
      "command": [
        "echo",
        "This goes to file1"
      ],
      "stdout": "/tes/file1.txt"
    },
    {
      "image": "docker-registry.ebrains.eu/tc/python:3.8-alpine",
      "command": [
        "sh",
        "-c",
        "echo 'This goes to file2' > /tes/file2.txt"
      ]
    }
  ]
}
